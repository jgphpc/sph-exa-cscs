// https://github.com/cp2k/dbcsr/blob/develop/.ci/daint.cscs.ch/Jenkinsfile
pipeline {
    agent any

    stages {
        stage("build and test") {
            parallel {
                stage("GNU") {
                    stages {
                        stage('build') {
                            steps {
                                run_lnode("gnu", "build")
                                // run_batch("0:10:00", "gnu", "build")
                            }
                        }
//                         stage('test') {
//                             steps {
//                                 run_batch("1:00:00", "gnu", "test")
//                             }
//                         }
                    }
                }
//{{{
//                 stage("OpenCL") {
//                     stages {
//                         stage('build') {
//                             steps {
//                                 run_batch("0:15:00", "ocl", "build")
//                             }
//                         }
//                         stage('test') {
//                             steps {
//                                 run_batch("1:00:00", "ocl", "test")
//                             }
//                         }
//                     }
//                 }
//                 stage("Intel") {
//                     stages {
//                         stage('build') {
//                             steps {
//                                 run_batch("0:30:00", "intel", "build")
//                             }
//                         }
//                         stage('test') {
//                             steps {
//                                 run_batch("1:00:00", "intel", "test")
//                             }
//                         }
//                     }
//                 }
//}}}
            }
        }
    }
}

def run_lnode(environment, task) {
    // def (account, basename) = env.JOB_NAME.split('/')
    def sbatch_script = ".jenkins/${environment}.${task}.sh"
    // def sbatch_out = "sbatch.${env.BUILD_TAG}.${environment}.${task}.out"

    // avoid using the shell for variable expansion to
    // get the final command displayed in Jenkins
    try {
        sh """
        ./${sbatch_script}
        """
    }
    finally {
        echo readFile("${sbatch_out}")
    }
}

// /scratch/snx3000/jenkssl/jenkins-c32-sphexa-21.gnu/local/bin/sphexa-cuda
def run_batch(timelimit, environment, task) {
    def (account, basename) = env.JOB_NAME.split('/')
    def sbatch_script = ".jenkins/${environment}.${task}.sh"
    def sbatch_out = "sbatch.${env.BUILD_TAG}.${environment}.${task}.out"

    // avoid using the shell for variable expansion to
    // get the final command displayed in Jenkins
    // TODO: fix --account="${account}" \
    try {
        sh """
        sbatch --wait \
            --time="${timelimit}" \
            --account=djenkssl \
            --job-name="${basename}.${environment}.${task}" \
            --output="${sbatch_out}" \
            ${sbatch_script}
        """
    }
    finally {
        echo readFile("${sbatch_out}")
    }
}

// vim: set filetype=groovy ts=4 sw=4 tw=0 :
